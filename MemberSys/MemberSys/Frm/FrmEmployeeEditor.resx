<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxEmp.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABH5JREFUaEPtWM9LFVEUVvr922ohmr8VBLdSUFpC/SFmtAjbBIGVkqBtiqCN2B8Q
        lVGkIZUQURKRmkngJoPapLVpoVkb06zvPL4ZzrtzZ+a+9/T5ID/4eDPnfOfcc2bu3Llv8taR6ygpKdlX
        WVl5CnwEToG/SDkeqKqqaikrK9tLee4AhW9DgR0VFRU/8Ps3itDM4bddYhi+tigtLS1GUW/NQh34Hnek
        jGnWBjU1NSUoZMYozJlofBp34gDTZRecNhNmUZoosElo83mEf7y8vHwr02YPGPiyrSBNSvNsPk1MpYuU
        Zgey2qCB2AeW8tgGkGvOW51wPGnTRHAJlGnchwvRmBgwDhDLUmlLlkTKYxsQYhqdFC0a6LT5XYn43qam
        po2JgcMAoazz1gSalDs1APaLFlfxhMWXEqWJxMBhgOCjLdAk5a4NTFGeEurq6jYj9iBqeqzz4UI0UBIE
        xPNajPNjdDkDcUeNHPN0pQ3dBI7v0hzESjQgMUaOjBtAnkMq5wzNQWCwnJlCGnixblH5lmgOAs4BJQwl
        5U4N4KI8pDwJRUVF2+Hvhv8TuCC/ci52SpKgc9IUBB6QFi0MI+WuDTRT7oPFj5hacsTWhNbQFARfZLKr
        1AkDhDRf9DheNn0GZ/EeKBCtBuzdhs5kN6U+tJ8mOyBo12IbIXNqABejTXQmOF083aXCwsIdsu1Qts+U
        +lC+6AZkA4YBxnWASfhlM5e02piEfyxsMwffgqfDer9TbNKEiv2dECp4PiFN4ZCtMJJM66BUiNgv8n+C
        6QKA378DcuVlzq/YHfDAJiLvhI2IGYsqXgBd3DPQRakP7acpHjIF5MqgqNgHG5yFrk3WbIaHImYVGpX/
        JJT60Bqa3CFbYtlVIljeEx9Q6E+hHIP9OG62rTZRYBPee2BRfnHeZSteAF/6DeQCMmoAV2cS7MR0Ok5T
        1pFRA5kEo+kGND8Ifkf8N/w+wXQ7TLczMqkh7WB5blDwoo4nl8RHmRN0PE3uSCcY2tPgHx1rUN7iZymP
        hY6lyR2pBkPXCuptxgRWsiossdVyrOyiaWVYJFTM6jaAqXEGOr94TKF3xcXF++kWfwHso54fXIbtHN2h
        UPrVawD+81qL4sdtH33xYO+B/43Wgh10W6G1NLnDJRjFtmkdzl9jyuymOwBu3l4YMZ10B6B1NLkjLhgD
        X9AanL+qra3dRXco5G0M7XMdC16lOwlaQ5M7ooJh69J+cNjbIruATTwzclyj24f20+SOsGCcX9E+cChs
        LxMF2QCiiUEj13W6E9A+mtxhCc7HgDe0HXyK1STtr9H8kJX0ZRBj3ITL+/fn2+U8JSBIPrQmgnm1erxz
        sl8KoDxthDTRI2MqW/hnlTAg6KtKMKSOhffr6+s3UZoxJBeKfmCM4Y8J3zSl7kBgn5fA4L3YL8bpYQNy
        3zLGShAN3KbGHXjxNFqSvcxkzsdBcmOMYWPM5erq6iOUpAZ03mskyzrleWA5qUOmylo2IcWvyHTlH5S7
        oHx28VenVeCSjAHeSXvarGMd/wXy8v4BKZNklRoaip8AAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>